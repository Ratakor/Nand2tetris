import time
from Mém import *

# Vérification partielles des mémoires sur quelques exemples

# Quadruplettes décrivant quelques opérations sur chaque mémoire

NOM = 0
TYPE = 1
TAILLE = 2
VALEURS = 3

MÉMOIRES=   (("binon", binon, None,         ((1, 1, None),
                                             (1, 0, None),
                                             (0, 1, None))),
             ("registre", registre, None,   ((1, (0,0,0,0, 1,1,1,1, 0,0,0,0, 1,1,1,1), None),
                                             (1, (0,0,0,0, 1,0,0,1, 0,1,0,0, 1,1,1,0), None),
                                             (0, (0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,1), None))),
             ("mem8", ram, 8,               ((1, (0,0,0,0, 1,1,1,1, 0,0,0,0, 1,1,1,1), (0,0,0)),
                                             (1, (0,0,0,0, 1,0,0,1, 0,1,0,0, 1,1,1,0), (0,1,0)),
                                             (1, (0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,1), (1,1,1)),
                                             (0, (0,0,0,0, 1,1,1,1, 1,1,1,1, 1,1,1,1), (0,0,0)))),
             ("mem64", ram, 64,             ((1, (0,0,0,0, 1,1,1,1, 0,0,0,0, 1,1,1,1), (0,0,0, 0,0,0)),
                                             (1, (0,0,0,0, 1,0,0,1, 0,1,0,0, 1,1,1,0), (0,1,0, 0,0,1)),
                                             (1, (0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,1), (1,1,1, 1,0,1)),
                                             (0, (0,0,0,0, 1,1,1,1, 1,1,1,1, 1,1,1,1), (0,0,0, 0,0,0)))),
             ("mem512", ram, 512,           ((1, (0,0,0,0, 1,1,1,1, 0,0,0,0, 1,1,1,1), (0,0,0, 0,0,0, 0,0,0)),
                                             (1, (0,0,0,0, 1,0,0,1, 0,1,0,0, 1,1,1,0), (0,1,0, 0,0,1, 1,0,0)),
                                             (1, (0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,1), (1,1,1, 1,0,1, 1,0,1)),
                                             (0, (0,0,0,0, 1,1,1,1, 1,1,1,1, 1,1,1,1), (0,0,0, 0,0,0, 0,0,0)))),
             ("mem4k", ram, 4096,           ((1, (0,0,0,0, 1,1,1,1, 0,0,0,0, 1,1,1,1), (0,0,0, 0,0,0, 0,0,0, 0,0,0)),
                                             (1, (0,0,0,0, 1,0,0,1, 0,1,0,0, 1,1,1,0), (0,1,0, 0,0,1, 1,0,0, 1,1,1)),
                                             (1, (0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,1), (1,1,1, 1,0,1, 1,0,1, 0,1,0)),
                                             (0, (0,0,0,0, 1,1,1,1, 1,1,1,1, 1,1,1,1), (0,0,0, 0,0,0, 0,0,0, 0,0,0)))),
#             ("mem32k", ram, 32768,         ((1, (0,0,0,0, 1,1,1,1, 0,0,0,0, 1,1,1,1), (0,0,0, 0,0,0, 0,0,0, 0,0,0, 0,0,0)),
#                                             (1, (0,0,0,0, 1,0,0,1, 0,1,0,0, 1,1,1,0), (0,1,0, 0,0,1, 1,0,0, 1,1,1, 0,0,0)),
#                                             (1, (0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,1), (1,1,1, 1,0,1, 1,0,1, 0,1,0, 1,0,1)),
#                                             (0, (0,0,0,0, 1,1,1,1, 1,1,1,1, 1,1,1,1), (0,0,0, 0,0,0, 0,0,0, 0,0,0, 0,0,0)))),
             ("ramfake", ramfake, None,     ((1, (0,0,0,0, 1,1,1,1, 0,0,0,0, 1,1,1,1), (0,0,0, 0,0,0, 0,0,0, 0,0,0, 0,0,0)),
                                             (1, (0,0,0,0, 1,0,0,1, 0,1,0,0, 1,1,1,0), (0,1,0, 0,0,1, 1,0,0, 0,0,0, 0,0,0)),
                                             (1, (0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,1), (1,1,1, 1,1,1, 1,1,0, 0,0,0, 0,0,0)),
                                             (0, (0,0,0,0, 1,1,1,1, 1,1,1,1, 1,1,1,1), (0,0,0, 0,0,0, 0,0,0, 0,0,0, 0,0,0)))))


for mem in MÉMOIRES:
    print(mem[NOM])
    taille = mem[TAILLE]
    if taille:
        m = mem[TYPE](taille)
    else:
        m = mem[TYPE]()
    for load,valeur,adresse in mem[VALEURS]:
        t1 = time.time()
        if adresse:
            exvaleur = m.probe(adresse)
            m.set(load, valeur, adresse)
            val = m.probe(adresse)
        else:
            exvaleur = m.probe()
            m.set(load, valeur)
            val = m.probe()
        if load:
            assert val == valeur
        else:
            assert val == exvaleur
        exvaleur = valeur
        t2 = time.time()
        print(t2-t1)


# Vérification du compteur sur quelques exemples
print("compteur")
pc = compteur()
v = (1,0,0,1, 1,1,1,1, 1,0,0,1, 1,1,1,1)
pc.set(0,1,0,v) # load
val = pc.probe()
assert val == v
pc.set(1,0,0,v) # reset
val = pc.probe()
assert val == (0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0)
pc.set(0,0,1,v) # inc
val = pc.probe()
assert val == (1,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0)
pc.set(0,0,1,v) # inc
val = pc.probe()
assert val == (0,1,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0)
pc.set(1,0,1,v) # reset&inc => reset prioritaire
val = pc.probe()
assert val == (0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0)
