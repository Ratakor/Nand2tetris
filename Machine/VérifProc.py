from Proc import *

NOM = 0
FONCTION = 1
OPÉRANDES = 2

# Vérification des commandes de l'ALU sur quelques exemples
XY= (((0,1,1,0, 1,1,1,0, 0,0,0,0, 1,0,0,1),(0,0,1,0, 1,0,1,0, 1,0,0,1, 1,0,0,0)),
     ((1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1),(0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0)),
     ((1,0,1,0, 1,1,1,1, 0,1,0,1, 0,0,0,0),(0,1,0,1, 0,0,0,0, 1,0,1,0, 1,1,1,1)))

CMDS=(("0",     (1,0,1,0,1,0),  (((0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),1,0),
                                 ((0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),1,0),
                                 ((0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),1,0))),
      ("1",     (1,1,1,1,1,1),  (((1,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),0,0),
                                 ((1,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),0,0),
                                 ((1,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),0,0))),
      ("-1",    (1,1,1,0,1,0),  (((1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1),0,1),
                                 ((1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1),0,1),
                                 ((1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1),0,1))),
      ("x",     (0,0,1,1,0,0),  (((0,1,1,0, 1,1,1,0, 0,0,0,0, 1,0,0,1),0,1),
                                 ((1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1),0,1),
                                 ((1,0,1,0, 1,1,1,1, 0,1,0,1, 0,0,0,0),0,0))),
      ("y",     (1,1,0,0,0,0),  (((0,0,1,0, 1,0,1,0, 1,0,0,1, 1,0,0,0),0,0),
                                 ((0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),1,0),
                                 ((0,1,0,1, 0,0,0,0, 1,0,1,0, 1,1,1,1),0,1))),
      ("!x",    (0,0,1,1,0,1),  (((1,0,0,1, 0,0,0,1, 1,1,1,1, 0,1,1,0),0,0),
                                 ((0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),1,0),
                                 ((0,1,0,1, 0,0,0,0, 1,0,1,0, 1,1,1,1),0,1))),
      ("!y",    (1,1,0,0,0,1),  (((1,1,0,1, 0,1,0,1, 0,1,1,0, 0,1,1,1),0,1),
                                 ((1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1),0,1),
                                 ((1,0,1,0, 1,1,1,1, 0,1,0,1, 0,0,0,0),0,0))),
      ("-x",    (0,0,1,1,1,1),  (((0,1,0,1, 0,0,0,1, 1,1,1,1, 0,1,1,0),0,0),
                                 ((1,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),0,0),
                                 ((1,1,0,1, 0,0,0,0, 1,0,1,0, 1,1,1,1),0,1))),
      ("-y",    (1,1,0,0,1,1),  (((0,0,1,1, 0,1,0,1, 0,1,1,0, 0,1,1,1),0,1),
                                 ((0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),1,0),
                                 ((0,1,1,0, 1,1,1,1, 0,1,0,1, 0,0,0,0),0,0))),
      ("x+1",   (0,1,1,1,1,1),  (((1,1,1,0, 1,1,1,0, 0,0,0,0, 1,0,0,1),0,1),
                                 ((0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),1,0),
                                 ((0,1,1,0, 1,1,1,1, 0,1,0,1, 0,0,0,0),0,0))),
      ("y+1",   (1,1,0,1,1,1),  (((1,0,1,0, 1,0,1,0, 1,0,0,1, 1,0,0,0),0,0),
                                 ((1,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),0,0),
                                 ((1,1,0,1, 0,0,0,0, 1,0,1,0, 1,1,1,1),0,1))),
      ("x-1",   (0,0,1,1,1,0),  (((1,0,1,0, 1,1,1,0, 0,0,0,0, 1,0,0,1),0,1),
                                 ((0,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1),0,1),
                                 ((0,0,1,0, 1,1,1,1, 0,1,0,1, 0,0,0,0),0,0))),
      ("y-1",   (1,1,0,0,1,0),  (((1,1,0,0, 1,0,1,0, 1,0,0,1, 1,0,0,0),0,0),
                                 ((1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1),0,1),
                                 ((1,0,0,1, 0,0,0,0, 1,0,1,0, 1,1,1,1),0,1))),
      ("x+y",   (0,0,0,0,1,0),  (((0,1,0,1, 0,0,1,1, 1,0,0,1, 0,1,0,1),0,1),
                                 ((1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1),0,1),
                                 ((1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1),0,1))),
      ("x-y",   (0,1,0,0,1,1),  (((0,1,0,0, 0,1,0,0, 1,1,1,0, 1,1,1,0),0,0),
                                 ((1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1),0,1),
                                 ((1,1,0,1, 0,1,1,1, 1,0,1,0, 1,0,0,0),0,0))),
      ("y-x",   (0,0,0,1,1,1),  (((0,1,1,1, 1,0,1,1, 0,0,0,1, 0,0,0,1),0,1),
                                 ((1,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),0,0),
                                 ((1,0,1,0, 1,0,0,0, 0,1,0,1, 0,1,1,1),0,1))),
      ("x&y",   (0,0,0,0,0,0),  (((0,0,1,0, 1,0,1,0, 0,0,0,0, 1,0,0,0),0,0),
                                 ((0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),1,0),
                                 ((0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),1,0))),
      ("x|y",   (0,1,0,1,0,1),  (((0,1,1,0, 1,1,1,0, 1,0,0,1, 1,0,0,1),0,1),
                                 ((1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1),0,1),
                                 ((1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,1),0,1))))


for cmd in CMDS:
    print(cmd[NOM])
    fonc = cmd[FONCTION]
    opérandes = cmd[OPÉRANDES]
    for (x,y),résultat in zip(XY,opérandes):
        r = ALU(x,y,*fonc)
        #print(x, y, résultat, r)
        assert r == résultat


# Vérification du CPU sur quelques exemples
print("cpu")
cpu = CPU()
print(cpu)
outM, writeM, addressM, pc = cpu.exec((0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0), (0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0), 1)
assert pc == (0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0)
print(cpu)

print("programme Add2 : RAM[2]=RAM[0]+RAM[1]")
programme = ((0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),
             (0,0,0,0, 1,0,0,0, 0,0,1,1, 1,1,1,1),
             (1,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),
             (0,0,0,0, 1,0,0,1, 0,0,0,0, 1,1,1,1),
             (0,1,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),
             (0,0,0,1, 0,0,0,0, 1,1,0,0, 0,1,1,1),
             (1,1,1,1, 1,1,1,1, 1,1,1,1, 1,1,1,0),
             (1,1,1,0, 0,0,0,1, 0,1,0,1, 0,1,1,1))
sorties =   ((0, (0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),(0,0,0, 0,0,0, 0,0,0, 0,0,0, 0,0,0),(1,0,0, 0,0,0, 0,0,0, 0,0,0, 0,0,0)),
             (0, (1,1,1,1, 0,0,0,0, 0,0,0,0, 0,0,0,0),(0,0,0, 0,0,0, 0,0,0, 0,0,0, 0,0,0),(0,1,0, 0,0,0, 0,0,0, 0,0,0, 0,0,0)),
             (0, (1,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),(1,0,0, 0,0,0, 0,0,0, 0,0,0, 0,0,0),(1,1,0, 0,0,0, 0,0,0, 0,0,0, 0,0,0)),
             (0, (0,1,1,1, 1,0,0,0, 0,0,0,0, 0,0,0,0),(1,0,0, 0,0,0, 0,0,0, 0,0,0, 0,0,0),(0,0,1, 0,0,0, 0,0,0, 0,0,0, 0,0,0)),
             (0, (0,1,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),(0,1,0, 0,0,0, 0,0,0, 0,0,0, 0,0,0),(1,0,1, 0,0,0, 0,0,0, 0,0,0, 0,0,0)),
             (1, (0,1,1,1, 1,0,0,0, 0,0,0,0, 0,0,0,0),(0,1,0, 0,0,0, 0,0,0, 0,0,0, 0,0,0),(0,1,1, 0,0,0, 0,0,0, 0,0,0, 0,0,0)),
             (0, (1,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),(1,1,1, 1,1,1, 1,1,1, 1,1,1, 1,1,1),(1,1,1, 0,0,0, 0,0,0, 0,0,0, 0,0,0)),
             (0, (0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0),(1,1,1, 1,1,1, 1,1,1, 1,1,1, 1,1,1),(1,1,1, 1,1,1, 1,1,1, 1,1,1, 1,1,1)))

for instruction,sortie in zip(programme,sorties):
    #print("__________________________")
    #print("instruction:", instruction)
    writeM, outM, addressM, pc = cpu.exec(instruction, (1,1,1,1, 0,0,0,0, 0,0,0,0, 0,0,0,0), 0)
    #print("outM:", outM, "writeM:", writeM, "addressM:", addressM, "PC:", pc)
    assert (writeM, outM, addressM, pc) == sortie
    print(cpu)
    #print(ram)
